(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{377:function(t,e,a){"use strict";a.r(e);var s=a(42),r=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"快速生成文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#快速生成文件"}},[t._v("#")]),t._v(" 快速生成文件")]),t._v(" "),a("h2",{attrs:{id:"介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#介绍"}},[t._v("#")]),t._v(" 介绍")]),t._v(" "),a("p",[t._v("开发过程中，避免不了手动去频繁创建页面、组件等文件，并且还要在文件里写一些必要的代码，是不是觉得很麻烦？现在你可以用更简洁的方式来处理这一切。")]),t._v(" "),a("p",[t._v("框架默认提供了 page（页面）、component（组件）、store（全局状态）、module（模块）共 4 种模式，通过 "),a("code",[t._v("yarn new")]),t._v(" 指令可以自行选择。")]),t._v(" "),a("h2",{attrs:{id:"page"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#page"}},[t._v("#")]),t._v(" page")]),t._v(" "),a("p",[a("img",{attrs:{src:"/plop-page.gif",alt:""}})]),t._v(" "),a("p",[t._v("page 模式下，只能在 "),a("code",[t._v("./src/views/")]),t._v(" 目录下选择指定的文件夹进行生成，生成的文件中，部分关键位置会被替换掉，例如 "),a("code",[t._v("<page-header />")]),t._v(" 中的 "),a("code",[t._v("title")]),t._v(" 会按照你输入的中文名称替换，页面的 "),a("code",[t._v("name")]),t._v(" 会根据当前文件目录和文件名自动生成，确保唯一。")]),t._v(" "),a("h2",{attrs:{id:"component"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#component"}},[t._v("#")]),t._v(" component")]),t._v(" "),a("p",[a("img",{attrs:{src:"/plop-component.gif",alt:""}})]),t._v(" "),a("p",[t._v("component 模式可以选择生成的是全局组件还是局部组件，全局组件生成目录为 "),a("code",[t._v("./src/components/")]),t._v(" ，局部组件则在 "),a("code",[t._v("./src/views/")]),t._v(" 目录下选择指定的文件夹进行生成。")]),t._v(" "),a("h2",{attrs:{id:"store"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#store"}},[t._v("#")]),t._v(" store")]),t._v(" "),a("p",[a("img",{attrs:{src:"/plop-store.gif",alt:""}})]),t._v(" "),a("p",[t._v("store 模式则会在 "),a("code",[t._v("./src/store/modules/")]),t._v(" 目录下生成一个空模版")]),t._v(" "),a("h2",{attrs:{id:"module"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#module"}},[t._v("#")]),t._v(" module")]),t._v(" "),a("p",[a("img",{attrs:{src:"/plop-module.gif",alt:""}})]),t._v(" "),a("p",[t._v("module 模式是一个标准模块模版，会在指定目录下生成模块文件夹，并且包含列表页、编辑（详情）页，以及相关局部组件。")]),t._v(" "),a("p",[t._v("这块部分详细介绍建议移步《"),a("a",{attrs:{href:"./module"}},[t._v("标准模块")]),t._v("》")]),t._v(" "),a("h2",{attrs:{id:"扩展"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#扩展"}},[t._v("#")]),t._v(" 扩展")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("说明")]),t._v(" "),a("p",[t._v("该功能基于 "),a("a",{attrs:{href:"https://www.npmjs.com/package/plop",target:"_blank",rel:"noopener noreferrer"}},[t._v("plop"),a("OutboundLink")],1),t._v(" 实现，在扩展新的模式前，请先详细阅读 plop 文档。")])]),t._v(" "),a("p",[t._v("除了框架提供的 4 种模式，你还可以自定义新的模式，其原理就是通过预设模版，按照特定规则创建文件或者文件夹。")]),t._v(" "),a("p",[t._v("预设模版文件存放在 "),a("code",[t._v("./plop-templates/")]),t._v(" 目录下，并在 "),a("code",[t._v("./plopfile.js")]),t._v(" 文件里进行引用，你可以参考现有 4 种模式的目录结构进行创建新的模版。")])])}),[],!1,null,null,null);e.default=r.exports}}]);